/*
Estuary API

This is the API for the Estuary application.

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UtilContentAddIpfsBody struct for UtilContentAddIpfsBody
type UtilContentAddIpfsBody struct {
	Coluuid *string `json:"coluuid,omitempty"`
	Dir *string `json:"dir,omitempty"`
	Filename *string `json:"filename,omitempty"`
	Peers []string `json:"peers,omitempty"`
	Root *string `json:"root,omitempty"`
}

// NewUtilContentAddIpfsBody instantiates a new UtilContentAddIpfsBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUtilContentAddIpfsBody() *UtilContentAddIpfsBody {
	this := UtilContentAddIpfsBody{}
	return &this
}

// NewUtilContentAddIpfsBodyWithDefaults instantiates a new UtilContentAddIpfsBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUtilContentAddIpfsBodyWithDefaults() *UtilContentAddIpfsBody {
	this := UtilContentAddIpfsBody{}
	return &this
}

// GetColuuid returns the Coluuid field value if set, zero value otherwise.
func (o *UtilContentAddIpfsBody) GetColuuid() string {
	if o == nil || o.Coluuid == nil {
		var ret string
		return ret
	}
	return *o.Coluuid
}

// GetColuuidOk returns a tuple with the Coluuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilContentAddIpfsBody) GetColuuidOk() (*string, bool) {
	if o == nil || o.Coluuid == nil {
		return nil, false
	}
	return o.Coluuid, true
}

// HasColuuid returns a boolean if a field has been set.
func (o *UtilContentAddIpfsBody) HasColuuid() bool {
	if o != nil && o.Coluuid != nil {
		return true
	}

	return false
}

// SetColuuid gets a reference to the given string and assigns it to the Coluuid field.
func (o *UtilContentAddIpfsBody) SetColuuid(v string) {
	o.Coluuid = &v
}

// GetDir returns the Dir field value if set, zero value otherwise.
func (o *UtilContentAddIpfsBody) GetDir() string {
	if o == nil || o.Dir == nil {
		var ret string
		return ret
	}
	return *o.Dir
}

// GetDirOk returns a tuple with the Dir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilContentAddIpfsBody) GetDirOk() (*string, bool) {
	if o == nil || o.Dir == nil {
		return nil, false
	}
	return o.Dir, true
}

// HasDir returns a boolean if a field has been set.
func (o *UtilContentAddIpfsBody) HasDir() bool {
	if o != nil && o.Dir != nil {
		return true
	}

	return false
}

// SetDir gets a reference to the given string and assigns it to the Dir field.
func (o *UtilContentAddIpfsBody) SetDir(v string) {
	o.Dir = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *UtilContentAddIpfsBody) GetFilename() string {
	if o == nil || o.Filename == nil {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilContentAddIpfsBody) GetFilenameOk() (*string, bool) {
	if o == nil || o.Filename == nil {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *UtilContentAddIpfsBody) HasFilename() bool {
	if o != nil && o.Filename != nil {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *UtilContentAddIpfsBody) SetFilename(v string) {
	o.Filename = &v
}

// GetPeers returns the Peers field value if set, zero value otherwise.
func (o *UtilContentAddIpfsBody) GetPeers() []string {
	if o == nil || o.Peers == nil {
		var ret []string
		return ret
	}
	return o.Peers
}

// GetPeersOk returns a tuple with the Peers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilContentAddIpfsBody) GetPeersOk() ([]string, bool) {
	if o == nil || o.Peers == nil {
		return nil, false
	}
	return o.Peers, true
}

// HasPeers returns a boolean if a field has been set.
func (o *UtilContentAddIpfsBody) HasPeers() bool {
	if o != nil && o.Peers != nil {
		return true
	}

	return false
}

// SetPeers gets a reference to the given []string and assigns it to the Peers field.
func (o *UtilContentAddIpfsBody) SetPeers(v []string) {
	o.Peers = v
}

// GetRoot returns the Root field value if set, zero value otherwise.
func (o *UtilContentAddIpfsBody) GetRoot() string {
	if o == nil || o.Root == nil {
		var ret string
		return ret
	}
	return *o.Root
}

// GetRootOk returns a tuple with the Root field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UtilContentAddIpfsBody) GetRootOk() (*string, bool) {
	if o == nil || o.Root == nil {
		return nil, false
	}
	return o.Root, true
}

// HasRoot returns a boolean if a field has been set.
func (o *UtilContentAddIpfsBody) HasRoot() bool {
	if o != nil && o.Root != nil {
		return true
	}

	return false
}

// SetRoot gets a reference to the given string and assigns it to the Root field.
func (o *UtilContentAddIpfsBody) SetRoot(v string) {
	o.Root = &v
}

func (o UtilContentAddIpfsBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Coluuid != nil {
		toSerialize["coluuid"] = o.Coluuid
	}
	if o.Dir != nil {
		toSerialize["dir"] = o.Dir
	}
	if o.Filename != nil {
		toSerialize["filename"] = o.Filename
	}
	if o.Peers != nil {
		toSerialize["peers"] = o.Peers
	}
	if o.Root != nil {
		toSerialize["root"] = o.Root
	}
	return json.Marshal(toSerialize)
}

type NullableUtilContentAddIpfsBody struct {
	value *UtilContentAddIpfsBody
	isSet bool
}

func (v NullableUtilContentAddIpfsBody) Get() *UtilContentAddIpfsBody {
	return v.value
}

func (v *NullableUtilContentAddIpfsBody) Set(val *UtilContentAddIpfsBody) {
	v.value = val
	v.isSet = true
}

func (v NullableUtilContentAddIpfsBody) IsSet() bool {
	return v.isSet
}

func (v *NullableUtilContentAddIpfsBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUtilContentAddIpfsBody(val *UtilContentAddIpfsBody) *NullableUtilContentAddIpfsBody {
	return &NullableUtilContentAddIpfsBody{value: val, isSet: true}
}

func (v NullableUtilContentAddIpfsBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUtilContentAddIpfsBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


