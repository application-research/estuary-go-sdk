/*
Estuary API

This is the API for the Estuary application.

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MainUserStatsResponse struct for MainUserStatsResponse
type MainUserStatsResponse struct {
	NumPins *int32 `json:"numPins,omitempty"`
	TotalSize *int32 `json:"totalSize,omitempty"`
}

// NewMainUserStatsResponse instantiates a new MainUserStatsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMainUserStatsResponse() *MainUserStatsResponse {
	this := MainUserStatsResponse{}
	return &this
}

// NewMainUserStatsResponseWithDefaults instantiates a new MainUserStatsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMainUserStatsResponseWithDefaults() *MainUserStatsResponse {
	this := MainUserStatsResponse{}
	return &this
}

// GetNumPins returns the NumPins field value if set, zero value otherwise.
func (o *MainUserStatsResponse) GetNumPins() int32 {
	if o == nil || o.NumPins == nil {
		var ret int32
		return ret
	}
	return *o.NumPins
}

// GetNumPinsOk returns a tuple with the NumPins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainUserStatsResponse) GetNumPinsOk() (*int32, bool) {
	if o == nil || o.NumPins == nil {
		return nil, false
	}
	return o.NumPins, true
}

// HasNumPins returns a boolean if a field has been set.
func (o *MainUserStatsResponse) HasNumPins() bool {
	if o != nil && o.NumPins != nil {
		return true
	}

	return false
}

// SetNumPins gets a reference to the given int32 and assigns it to the NumPins field.
func (o *MainUserStatsResponse) SetNumPins(v int32) {
	o.NumPins = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *MainUserStatsResponse) GetTotalSize() int32 {
	if o == nil || o.TotalSize == nil {
		var ret int32
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainUserStatsResponse) GetTotalSizeOk() (*int32, bool) {
	if o == nil || o.TotalSize == nil {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *MainUserStatsResponse) HasTotalSize() bool {
	if o != nil && o.TotalSize != nil {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given int32 and assigns it to the TotalSize field.
func (o *MainUserStatsResponse) SetTotalSize(v int32) {
	o.TotalSize = &v
}

func (o MainUserStatsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NumPins != nil {
		toSerialize["numPins"] = o.NumPins
	}
	if o.TotalSize != nil {
		toSerialize["totalSize"] = o.TotalSize
	}
	return json.Marshal(toSerialize)
}

type NullableMainUserStatsResponse struct {
	value *MainUserStatsResponse
	isSet bool
}

func (v NullableMainUserStatsResponse) Get() *MainUserStatsResponse {
	return v.value
}

func (v *NullableMainUserStatsResponse) Set(val *MainUserStatsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMainUserStatsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMainUserStatsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMainUserStatsResponse(val *MainUserStatsResponse) *NullableMainUserStatsResponse {
	return &NullableMainUserStatsResponse{value: val, isSet: true}
}

func (v NullableMainUserStatsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMainUserStatsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


