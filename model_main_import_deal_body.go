/*
Estuary API

This is the API for the Estuary application.

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MainImportDealBody struct for MainImportDealBody
type MainImportDealBody struct {
	Coluuid *string `json:"coluuid,omitempty"`
	DealIDs []int32 `json:"dealIDs,omitempty"`
	Dir *string `json:"dir,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewMainImportDealBody instantiates a new MainImportDealBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMainImportDealBody() *MainImportDealBody {
	this := MainImportDealBody{}
	return &this
}

// NewMainImportDealBodyWithDefaults instantiates a new MainImportDealBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMainImportDealBodyWithDefaults() *MainImportDealBody {
	this := MainImportDealBody{}
	return &this
}

// GetColuuid returns the Coluuid field value if set, zero value otherwise.
func (o *MainImportDealBody) GetColuuid() string {
	if o == nil || o.Coluuid == nil {
		var ret string
		return ret
	}
	return *o.Coluuid
}

// GetColuuidOk returns a tuple with the Coluuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainImportDealBody) GetColuuidOk() (*string, bool) {
	if o == nil || o.Coluuid == nil {
		return nil, false
	}
	return o.Coluuid, true
}

// HasColuuid returns a boolean if a field has been set.
func (o *MainImportDealBody) HasColuuid() bool {
	if o != nil && o.Coluuid != nil {
		return true
	}

	return false
}

// SetColuuid gets a reference to the given string and assigns it to the Coluuid field.
func (o *MainImportDealBody) SetColuuid(v string) {
	o.Coluuid = &v
}

// GetDealIDs returns the DealIDs field value if set, zero value otherwise.
func (o *MainImportDealBody) GetDealIDs() []int32 {
	if o == nil || o.DealIDs == nil {
		var ret []int32
		return ret
	}
	return o.DealIDs
}

// GetDealIDsOk returns a tuple with the DealIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainImportDealBody) GetDealIDsOk() ([]int32, bool) {
	if o == nil || o.DealIDs == nil {
		return nil, false
	}
	return o.DealIDs, true
}

// HasDealIDs returns a boolean if a field has been set.
func (o *MainImportDealBody) HasDealIDs() bool {
	if o != nil && o.DealIDs != nil {
		return true
	}

	return false
}

// SetDealIDs gets a reference to the given []int32 and assigns it to the DealIDs field.
func (o *MainImportDealBody) SetDealIDs(v []int32) {
	o.DealIDs = v
}

// GetDir returns the Dir field value if set, zero value otherwise.
func (o *MainImportDealBody) GetDir() string {
	if o == nil || o.Dir == nil {
		var ret string
		return ret
	}
	return *o.Dir
}

// GetDirOk returns a tuple with the Dir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainImportDealBody) GetDirOk() (*string, bool) {
	if o == nil || o.Dir == nil {
		return nil, false
	}
	return o.Dir, true
}

// HasDir returns a boolean if a field has been set.
func (o *MainImportDealBody) HasDir() bool {
	if o != nil && o.Dir != nil {
		return true
	}

	return false
}

// SetDir gets a reference to the given string and assigns it to the Dir field.
func (o *MainImportDealBody) SetDir(v string) {
	o.Dir = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MainImportDealBody) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MainImportDealBody) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MainImportDealBody) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MainImportDealBody) SetName(v string) {
	o.Name = &v
}

func (o MainImportDealBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Coluuid != nil {
		toSerialize["coluuid"] = o.Coluuid
	}
	if o.DealIDs != nil {
		toSerialize["dealIDs"] = o.DealIDs
	}
	if o.Dir != nil {
		toSerialize["dir"] = o.Dir
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableMainImportDealBody struct {
	value *MainImportDealBody
	isSet bool
}

func (v NullableMainImportDealBody) Get() *MainImportDealBody {
	return v.value
}

func (v *NullableMainImportDealBody) Set(val *MainImportDealBody) {
	v.value = val
	v.isSet = true
}

func (v NullableMainImportDealBody) IsSet() bool {
	return v.isSet
}

func (v *NullableMainImportDealBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMainImportDealBody(val *MainImportDealBody) *NullableMainImportDealBody {
	return &NullableMainImportDealBody{value: val, isSet: true}
}

func (v NullableMainImportDealBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMainImportDealBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


